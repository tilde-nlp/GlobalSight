#    /**
#     * <p>A regexp matching a single uppercase character followed by a
#     * period.  This is most likely <em>not</em> a word that can end a
#     * sentence.</p>
#     */
regexp_name1 = SINGLECHAR_
regexp1 = (^|[:space:])[:alpha:]\\.[:space:]*$

#    /**
#     * <p>A regexp matching an exclamation or question mark at the end
#     * of a segment if it's <b>not</b> followed by whitespace.</p>
#     *
#     * <p>Example: <em>"What's up?", he asked.</em> is segmented like
#     * this: <em>"What's up?</em> and <em>", he asked.</em></p>
#     */
regexp_name2 = ENDINGPUNCT_
regexp2 = (!|\\?)$

#    /**
#     * <p>A regexp matching an exclamation or question mark at the end
#     * of a segment that is followed by closing quotes and optional
#     * whitespace.</p>
#     *
#     * <p>Example: <em>"What's up?", he asked.</em> is segmented like
#     * this: <em>"What's up?</em> and <em>", he asked.</em></p>
#     */
regexp_name3 = ENDINGPUNCT2_
regexp3 = (!|\\?)[\\x27|\\x22][:space:]*$

regexp_name4 = STARTINGPUNCT2_
regexp4 = ^(,|;|[:space:]*\\(?[:lower:])

#    /**
#     * <p>A builtin regexp matching a comma, semicolon, period,
#     * exclamation mark or question mark at the
#     * <strong>beginning</strong> of a sentence.  These characters do
#     * not start a sentence in any language.</p>
#     */
regexp_name5 = STARTINGPUNCT3_
regexp5 = ^(,|;|!|\\.|\\?)

#    /**
#     * <p>A regexp matching digits followed by a period and space.
#     * Used for ordinal followers detection (in e.g. German).</p>
#     */
regexp_name6 = ENDINGDIGITS_
regexp6 = (^|[:space:])[:digit:]+\\.[:space:]*$

######################################################################
#
# Built-in abbreviation lists
#

regexp_name7 = ABBR_DE_
regexp7 = (^|[:space:])(Dr|Prof|dipl|inform|ing|med|h\\.c|z\\.B|d\\.h|ca|sog|bzw|ggf|zw)\\.[:space:]*$

regexp_name8 = ABBR_EN_
regexp8 = (^|[:space:])(Dr|Mr|Mrs|Ms|i\\.e|e\\.g|w\\.r\\.t|approx|ca|cf|vs)\\.[:space:]*$

regexp_name9 = ABBR_ES_
regexp9 = (^|[:space:])(dho|S|Sra|Srta|U|UU|Ud|Uds|V|Vd|Vds)\\.[:space:]*$

regexp_name10 = ABBR_FR_
regexp10 = (^|[:space:])(Dr\\.|Prof\\.|M\\.|ex\\.|[Bb]lvd\\.|[Aa]v\\.|r\\.|ca\\.|[Tt][e\\u00e9]l\\.|p\\.d\\.|[Ss]\\.[Aa]\\.)[:space:]*$

regexp_name11 = ABBR_NL_
regexp11 = (^|[:space:])(Dr|Prof|dipl|vb|bvb|nl|Mr|Mvr|Mevr|Mej|t\\.a\\.v|o\\.l\\.v|i\\.p\\.v|d\\.w\\.z|o\\.a|t\\.e\\.m|[Tt]el|blz|pag|St|ong|ca|V\\.U|m\\.b\\.t|t\\.g\\.v|i\\.v\\.m|t\\.o\\.v|i\\.s\\.m|n\\.a\\.v|m\\.a\\.w|v\\.a|tss)\\.[:space:]*$

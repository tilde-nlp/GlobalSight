## This file contains static configuration settings for the GXML Extractors.
## If changes are made to this file, GlobalSight needs to be restarted.

#
# extractor_nbsp_is_white: instructs the extractors (HTML, XML 
#   and others) to treat non-breaking spaces as whitespace.
#
#   If set to "true", segments that consist of only nbsps will 
#   not be extracted, and the HTML extractor will remove 
#   segment-initial and segment-trailing nbsp characters from 
#   segments and push them to the surrounding skeleton.
#
#   If set to "false", nbsps will be extracted like other 
#   alphabetic characters.
#
#   The default value is "true".
#
extractor_nbsp_is_white = true

#
# plaintext_break_on_eol: when false, the plaintext extractor 
#   breaks paragraphs on empty lines (two consecutive LF characters).  
#   When true, each line is treated as a paragraph on its own (break 
#   at each LF char).
#
#   The default value is "false".
#
plaintext_break_on_eol = false

#
# segmentation: specifies whether to produce paragraph or sentence-
#   level segmentation.  
#   Allowed values: "paragraph" and "sentence".
# 
segmentation=sentence

#
# segmentation_preserve_whitespace: if true, the segmenter replaces 
#   TMX tags representing whitespace with actual whitespace during
#   segmentation (correct behavior). If false, such tags are treated 
#   as non-existent and words to the left and right of the tags may 
#   run together, leading to incorrect segmentation (behavior up to 4.4.x).
#
#   The default value is "true".
#
segmentation_preserve_whitespace=true

#
# segmentation_use_icu: if true, the segmenter uses IBM's ICU library
#   and it's rule-based break iterators for segmentation. If false,
#   the standard Java break iterators are used. Default is false to
#   prevent any data migration issues (backwards-compatibility).
#   Allowed values: true, false.
segmentation_use_icu=false

#
# validate_gxml: a debug setting to let the GXML Extractors validate 
#   their output against the GXML DTD.  When validation fails, an 
#   exception is thrown to the caller.
#   Allowed values: true, false.
#
validate_gxml=false

# wordcount_localizables: Determines whether localizable segments 
#   should be included in the word count. If true, a localizable 
#   segment counts as 1 word. If false, localizables are not counted.
wordcount_localizables=true

##
## Conditional Extraction Comments
##

# CE_default_state: sets the default extraction state for all
#   extractors.  When set to "extract", all items are extracted 
#   unless prohibited; when set to "exclude", no item is 
#   extracted unless specifically requested.
#
CE_default_state = extract

# CE_embedded_default_state: sets the default extraction state for 
#   all *embedded* extractors.  When set to "extract", all embedded 
#   items are extracted unless prohibited; when set to "exclude", no 
#   embedded item is extracted unless specifically requested; 
#   When set to "inherit", the top-level extractor's setting is inherited.
#
#   The default value is "inherit".
#
CE_embedded_default_state = inherit

#
# The next values are regular expressions to guide conditional
# extraction.
#
# They can be used in any files that allow comments, 
# e.g. in JavaScript: 
#
#    // GS_EXCLUDE_UNMARKED
#    ...
#    // List of L10N strings starts here.
#    // GS_BEGIN_EXTRACT
#    var lb_OK     = "ok";
#    var lb_Cancel = "cancel";
#    // GS_END_EXTRACT
#
# Or, alternatively, individual strings can be marked:
#
#    // GS_EXCLUDE_UNMARKED
#    ...
#    // List of L10N strings starts here.
#    var lb_OK     = /*GS_EXTRACT_NEXT*/ "ok";
#    var lb_Cancel = /*GS_EXTRACT_NEXT*/ "cancel";
#

# CE_exclude_unmarked: sets the default extraction state to 
#   "exclude" for the current file only.
CE_exclude_unmarked = (GS_EXCLUDE_UNMARKED)

# CE_extract_unmarked: sets the default extraction state to 
#   "extract" for the current file only.
CE_extract_unmarked = (GS_EXTRACT_UNMARKED)

# CE_begin_exclude: the next items are not extracted unless otherwise
#   specified
CE_begin_exclude    = (GS_BEGIN_EXCLUDE)

# CE_end_exclude: the next items are extracted depending on the
#   default extraction state for the current file
CE_end_exclude      = (GS_END_EXCLUDE)

# CE_begin_extract: the next items are extracted unless otherwise
#   specified
CE_begin_extract    = (GS_BEGIN_EXTRACT)

# CE_end_extract: the next items are extracted depending on the
#   default extraction state for the current file
CE_end_extract      = (GS_END_EXTRACT)

# CE_exclude_next: the next single item is not extracted.
CE_exclude_next     = (GS_EXCLUDE_NEXT)

# CE_exclude_next: the next single item is extracted.
CE_extract_next     = (GS_EXTRACT_NEXT|TU)

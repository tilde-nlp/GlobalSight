/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * EixtDialog.java
 *
 * Created on 2010-7-3, 21:20:13
 */

package testUI;
import util.*;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintStream;
import java.util.ArrayList;

import org.dom4j.Document;
import org.dom4j.DocumentHelper;
import org.dom4j.Element;
import org.dom4j.io.XMLWriter;
/**
 *
 * @author likun
 */
public class EixtDialog extends javax.swing.JDialog {

    /** Creates new form EixtDialog */
    public EixtDialog(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public void setAccountList(ArrayList<Account> accountList){
        this.accountList = accountList;
    }
    public ArrayList<Account> getAccountList(){
        return this.accountList;
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        exitWarnLabel = new javax.swing.JLabel();
        buttonPanel = new javax.swing.JPanel();
        yesButton = new javax.swing.JButton();
        noButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setName("Form"); // NOI18N
        setResizable(false);

        exitWarnLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(testtool.TestToolApp.class).getContext().getResourceMap(EixtDialog.class);
        exitWarnLabel.setText(resourceMap.getString("exitWarnLabel.text")); // NOI18N
        exitWarnLabel.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        exitWarnLabel.setName("exitWarnLabel"); // NOI18N
        getContentPane().add(exitWarnLabel, java.awt.BorderLayout.CENTER);

        buttonPanel.setName("buttonPanel"); // NOI18N

        yesButton.setText(resourceMap.getString("yesButton.text")); // NOI18N
        yesButton.setName("yesButton"); // NOI18N
        yesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                yesButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(yesButton);

        noButton.setText(resourceMap.getString("noButton.text")); // NOI18N
        noButton.setName("noButton"); // NOI18N
        noButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                noButtonActionPerformed(evt);
            }
        });
        buttonPanel.add(noButton);

        getContentPane().add(buttonPanel, java.awt.BorderLayout.SOUTH);

        java.awt.Dimension screenSize = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
        setBounds((screenSize.width-400)/2, (screenSize.height-300)/2, 400, 300);
    }// </editor-fold>//GEN-END:initComponents

    private void yesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_yesButtonActionPerformed
        this.createAccountXML();
        System.exit(0);
}//GEN-LAST:event_yesButtonActionPerformed

    private void noButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_noButtonActionPerformed
        setVisible(false);
    }//GEN-LAST:event_noButtonActionPerformed

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                EixtDialog dialog = new EixtDialog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    private void createAccountXML(){


            if(accountList!=null && accountList.size()!=0){
              Document doc = DocumentHelper.createDocument();
		      Element accountsElement = doc.addElement("accounts");

                for(Account account : accountList){
                    Element accountElement = accountsElement.addElement("account");

                    Element hostElement = accountElement.addElement("host");
                    hostElement.setText(account.getHost());

                    Element portElement = accountElement.addElement("port");
                    portElement.setText(account.getPort());

                    Element userNameElement = accountElement.addElement("userName");
                    userNameElement.setText(account.getUserName());

                    Element passwordElement = accountElement.addElement("password");
                    passwordElement.setText(account.getPassword());
                    
                    Element httpsElement = accountElement.addElement("https");
                    httpsElement.setText(account.getHttps());
                 
                }

		// write XML file
                //String path = Thread.currentThread().getContextClassLoader().getResource("").getPath();
                String path = FileUtil.getCurrentPath();
                String filePath = path + "/" +WebServiceConstants.ACCOUNTS_FILE;

		File accountsXML = new File(filePath);
		try{
			XMLWriter out = new XMLWriter(new FileWriter(accountsXML));
			out.write(doc);
			out.close();
		}
		catch(IOException e){
			        PrintStream ps = WriteLog.getPrintStreamForLog(WebServiceConstants.LOG_FILE);
        	        e.printStackTrace(ps);
                    WriteLog.info(WebServiceConstants.IS_LOG, "IOException: Create 'accounts.xml' Exception in AbstractTestManager.createAccountXML()"+"\r\n");
		}
            }

		
	}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonPanel;
    private javax.swing.JLabel exitWarnLabel;
    private javax.swing.JButton noButton;
    private javax.swing.JButton yesButton;
    // End of variables declaration//GEN-END:variables
    private ArrayList<Account> accountList;

}
